<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper 
	namespace="cn.tedu.ssm.spring.Mapping.mapping">
	
	<!-- 用户注册 -->
	<!-- Integer register(User user) -->
	<!-- 当前方法需要执行INSERT操作，
	所以使用insert节点进行配置 -->
	<!-- 每个节点的id都表示对应的方法名称 -->
	<!-- parameterType表示参数类型，
	如果参数是基本类型或String可以不配置该属性 -->
	<!-- 所有增删改操作默认返回受影响的行数，
	但是，不配置返回值类型 -->
	<!-- 如果INSERT时需要得到新数据的ID，
	则需要配置useGeneratedKeys="true"，
	并配置keyProperty="id"，这个属性值是数据表中的字段名 -->
	<insert id="regist" parameterType="cn.tedu.ssm.spring.entity.User">
		insert into emp	(id,username,name,password )
			values(#{id},#{username},#{name},#{password})
	</insert>
	
	<!-- 根据用户名查询用户信息 -->
	<!-- User findUserByUsername(String username) -->
	<!-- 所有的select节点都必须配置返回值类型 -->
	<!-- 即使返回的是基本类型或String也必须声明 -->
	<select id="findByUsername" parameterType="String" resultType="cn.tedu.ssm.spring.entity.User">
		select id, username,name, password  from emp where username=#{username}
	</select>
	
	
	
	<!-- 根据用户id查询用户信息 -->
	<!-- User findUserById(Integer id) -->

	
	<!-- 查询所有用户信息 -->
	<!-- List<User> findAllUser() -->
	<!-- 如果需要查询结果是List集合，在节点上声明时，
	只需要标明List集合中的泛型类型即可 -->
	<!-- 其实，所有的select查出来的都是List -->
	
	
	<!-- 删除用户数据 -->
	<!-- Integer delete(Integer id) -->
	<!-- 如果只有1个参数，
	且是基本类型(含包装类)或String，
	则不需要声明参数类型 -->

	
	<!-- 修改用户信息 -->
	<!-- Integer changeUserInfo(User user) -->
	
	
	<!-- 修改用户名 -->
	<!-- Integer changeUsername(
		Integer arg0, 
		String arg1) -->

</mapper>





