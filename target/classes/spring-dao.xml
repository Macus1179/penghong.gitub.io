<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	
	<context:component-scan 
		base-package="cn.tedu.ssm.spring.Mapping" />
		
	<!-- 读取db.properties -->
	
	<util:properties
		id="dbConfig"
		location="classpath:db.properties" />
		
	<!-- 配置BasicDataSource -->
	<!-- 注入属性值时 -->
	<!-- name的值是BasicDataSource类中声明的属性名称 -->
	<!-- value的值是使用Spring表达式从dbConfig中获取的 -->
	<!-- Spring表达式中 -->
	<!-- dbConfig后的名称源自db.properties中使用的名称 -->
	<!-- 配置第一个数据源 -->
	<bean
		id="defultdataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="url"
			value="#{dbConfig.url}" />
		<property name="driverClassName"
			value="#{dbConfig.driver}" />
		<property name="username"
			value="#{dbConfig.username}" />
		<property name="password"
			value="#{dbConfig.password}" />
		<property name="initialSize"
			value="#{dbConfig.initSize}" />
		<property name="maxActive"
			value="#{dbConfig.maxActive}" />
	</bean>
	<!-- 配置第二个数据源 -->
	<bean
		id="jdbc_dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="url"
			value="#{dbConfig.jdbcurl}" />
		<property name="driverClassName"
			value="#{dbConfig.jdbcdriver}" />
		<property name="username"
			value="#{dbConfig.jdbcusername}" />
		<property name="password"
			value="#{dbConfig.jdbcpassword}" />
		<property name="initialSize"
			value="#{dbConfig.jdbcinitSize}" />
		<property name="maxActive"
			value="#{dbConfig.jdbcmaxActive}" />
	</bean>
	<!-- 配置通过key来选择关联两个数据源的映射数据源 -->
	<bean id="dataSource" class="cn.tedu.ssm.spring.Mapping.DynamicDataSource">
	<property name="targetDataSources">
		<map key-type="java.lang.String">
			<!-- 指定lookupKey和与之对应的数据源，这里的key可以自行定义，要切换数据库的时候以key为标识 -->
			<entry key="defultdataSource" value-ref="defultdataSource" />
			<entry key="jdbc_dataSource" value-ref="jdbc_dataSource" />
		</map>
	</property>
	<!-- 这里可以指定默认的数据源 -->

        <property name="defaultTargetDataSource" ref="jdbc_dataSource" />
	</bean>	
	
	
	<!-- MapperScannerConfigurer -->
	<bean
		class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 配置mybatis的接口文件所在的根包 -->
		<property name="basePackage"
			value="cn.tedu.ssm.spring.Mapping" />
	</bean>
	
	<!-- SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- DataSource -->
		<!-- 取值是配置的BasicDataSource的id -->
		
		<property name="dataSource"
			ref="dataSource" />
		<!-- 映射文件在哪里 -->
		<property name="mapperLocations"
			value="classpath:Mapping/*" />
	</bean>

	<!-- DataSourceTransactionManager 事物管理-->
	<bean
		id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource"
			ref="dataSource" />
	</bean>
	
	<!-- 注解驱动 -->
	<tx:annotation-driven
		transaction-manager="transactionManager"/>

</beans>









